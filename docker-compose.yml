services:
  backend:
    build:
      context: ./backend
      dockerfile: docker/Dockerfile
    container_name: backend
    env_file:
      - .development.env
    ports:
      - "8000:8000"
    volumes:
      - ./backend/store/store:/app/store  # Монтируем папку с настройками
      - ./backend/store/manage.py:/app/manage.py  # Монтируем manage.py
      - static_volume:/app/static
      - media_volume:/app/media
    command: python manage.py runserver 0.0.0.0:8000
    depends_on:
      - postgres
    restart: always

  frontend:
    build:
      context: ./frontend
      dockerfile: docker/Dockerfile
    container_name: frontend
    ports:
      - "5173:5173"
    env_file:
      - .development.env
    volumes:
      - ./frontend:/app
      - /app/node_modules
    command: npm run dev -- --host 0.0.0.0
    restart: always

  postgres:
    container_name: postgres
    image: postgres:17
    env_file:
      - .development.env
    environment:
      PGDATA: /var/lib/postgresql/data
    ports:
      - "5433:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    restart: always

  nginx:
    image: nginx:alpine
    container_name: nginx
    volumes:
      - ./backend/docker/nginx/nginx.conf:/etc/nginx/conf.d/default.conf
      - static_volume:/app/static
      - media_volume:/app/media
    ports:
      - "80:80"
    depends_on:
      - backend
    restart: always

volumes:
  pgdata:
  static_volume:
  media_volume: